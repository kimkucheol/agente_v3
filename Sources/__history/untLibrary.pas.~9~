unit untLibrary;
{
############################################################################
# Inclusão ...... :
#  Autor   : Rogério Teixeira
#  Data    : 24.03.2015
#  Motivo  : Geração de Library (Class, Records)
############################################################################
# Manutenção ...... :
#  Usuario :
#  Data    :
#  Motivo  :
#  Ref.    :
############################################################################
}
interface
  uses SysUtils, Forms;

Type

  TAgente = Class
  private
    function GetPathArqConf: string;
  public
    property PathArqConf : string read GetPathArqConf;
  End;


  // Classe de Conf.ini
  TConfiguracoes = Class
  private
    function Getcmd01: string;
    function Getcmd02: string;
    function Getcmd03: string;
    function Getcmd04: string;
    function Getcmd05: string;
  public
    property cmd01: string read Getcmd01;
    property cmd02: string read Getcmd01;
    property cmd03: string read Getcmd02;
    property cmd04: string read Getcmd03;
    property cmd05: string read Getcmd04;
    property cmd06: string read Getcmd05;
  End;

  Var Configuracao : TConfiguracoes;  // Conf.ini
      Agente       : TAgente;         // HosannaAgente.exe

Const
  CnstNameArqConf = 'Config.INI';

implementation
  uses untFuncoes;


{ TConfiguracoes }
function TConfiguracoes.Getcmd01: string;
begin
  Result := FncLeINI(Agente.PathArqConf,'COMANDOS','CMD01');
end;

function TConfiguracoes.Getcmd02: string;
begin
  Result := FncLeINI(Agente.PathArqConf,'COMANDOS','CMD02');
end;

function TConfiguracoes.Getcmd03: string;
begin
  Result := FncLeINI(Agente.PathArqConf,'COMANDOS','CMD03');
end;

function TConfiguracoes.Getcmd04: string;
begin
  Result := FncLeINI(Agente.PathArqConf,'COMANDOS','CMD04');
end;

function TConfiguracoes.Getcmd05: string;
begin
  Result := FncLeINI(Agente.PathArqConf,'COMANDOS','CMD05');
end;

{ TAgente }
function TAgente.GetPathArqConf: string;
begin
  Result := IncludeTrailingBackslash(ExtractFilePath(Application.ExeName))+CnstNameArqConf;
end;

end.

